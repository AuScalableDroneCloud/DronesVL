proxy:
  https:
    enabled: true
    hosts:
      - ${JHUB_HOST}
    letsencrypt:
      contactEmail: ${JHUB_ADMIN_USER}
  service:
    loadBalancerIP: ${JHUB_LOADBALANCER_IP}
  secretToken: "${JHUB_SECRET_TOKEN}"

hub:
  config:
    Auth0OAuthenticator:
      client_id: ${WO_AUTH0_KEY}
      client_secret: ${WO_AUTH0_SECRET}
      oauth_callback_url: https://${JHUB_HOST}/hub/oauth_callback
      scope:
        - openid
        - email
      auth0_subdomain: ${WO_AUTH0_SUBDOMAIN}
    Authenticator:
      admin_users:
        - ${JHUB_ADMIN_USER}
      auto_login: true
      enable_auth_state: true
    CryptKeeper:
      keys:
        - ${JHUB_CRYPT_KEEPER_KEY1}
    JupyterHub:
      authenticator_class: auth0
  db:
    pvc:
      storageClassName: csi-sc-cinderplugin
  extraConfig:
    custom_auth: |
      def asdc_auth_state_hook(spawner, auth_state):
        spawner.environment = {
          "ASDC_USER_REFRESH_TOKEN": auth_state.get("refresh_token"),
          "ASDC_USER_ACCESS_TOKEN": auth_state.get("access_token"),
          "ASDC_USER_ID_TOKEN": auth_state.get("id_token"),
          "ASDC_AUTH0_USER": str(auth_state.get("auth0_user"))
        }
      c.KubeSpawner.auth_state_hook = asdc_auth_state_hook

singleuser:
  defaultUrl: "/lab"
  storage:
    dynamic:
      storageClass: csi-sc-cinderplugin
