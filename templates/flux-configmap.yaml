#Necessary namespaces
kind: Namespace
apiVersion: v1
metadata:
  name: flux-system
  labels:
    name: flux-system
---
kind: Namespace
apiVersion: v1
metadata:
  name: jupyterhub
  labels:
    name: jupyterhub
---
#Pass env settings to fluxcd
#via ConfigMaps and Secret
#See: https://github.com/flux/zero-to-flux-k8s/blob/main/flux/values.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: flux-configmap
  namespace: flux-system
data:
  #Misc
  ASDC_ENV: "${ASDC_ENV}"
  CLUSTER: ${CLUSTER}
  ZONE: ${ZONE}
  RUNTIME: ${RUNTIME}

  #S3
  AWS_IMAGE_BUCKET: "${AWS_IMAGE_BUCKET}"
  AWS_STORAGE_BUCKET: "${AWS_STORAGE_BUCKET}"

  #webodm
  WEBAPP_IP: "${WEBAPP_IP}"
  WEBAPP_VOLUME_SIZE: "${WEBAPP_VOLUME_SIZE}"
  WEBAPP_HOST: "${WEBAPP_HOST}"
  DB_VOLUME_SIZE: "${DB_VOLUME_SIZE}"
  DB_VOLUME_ID: "${DB_VOLUME_ID}"

  #tusd, uppy
  TUSD_VOLUME_SIZE: "${TUSD_VOLUME_SIZE}"
  UPPY_VOLUME_SIZE: "${UPPY_VOLUME_SIZE}"

  #gpu-operator
  NVIDIA_DRIVER: "${NVIDIA_DRIVER}"

  #jupyterhub
  PIPELINES_URL: "${PIPELINES_URL}"
  PIPELINE_REPO: "${PIPELINE_REPO}"

  #NodeODM
  NODE_VOLUME_SIZE: "${NODE_VOLUME_SIZE}"
  NODEODM_CPU_REPLICAS: "${NODEODM_CPU_REPLICAS}"
  NODEODM_P4_REPLICAS: "${NODEODM_P4_REPLICAS}"
  NODEODM_A40_REPLICAS: "${NODEODM_A40_REPLICAS}"
  NODEODM_A100_REPLICAS: "${NODEODM_A100_REPLICAS}"

---
apiVersion: v1
kind: Secret
metadata:
  name: flux-secrets
  namespace: flux-system
type: Opaque
stringData:
  #botkube
  BOTKUBE_SLACK_TOKEN: "${BOTKUBE_SLACK_TOKEN}"

  #webodm
  WO_AUTH0_DOMAIN: "${WO_AUTH0_DOMAIN}"
  WO_AUTH0_SUBDOMAIN: "${WO_AUTH0_SUBDOMAIN}"
  WO_AUTH0_KEY: "${WO_AUTH0_KEY}"
  WO_AUTH0_SECRET: "${WO_AUTH0_SECRET}"
  WO_AUTH0_API_KEY: "${WO_AUTH0_API_KEY}"
  WO_CONTACT_EMAIL: "${WO_CONTACT_EMAIL}"
  WO_ENCRYPTION_KEY: "${WO_ENCRYPTION_KEY}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  #s3 object store on OpenStack
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_ENDPOINT: $AWS_ENDPOINT

  #s3 for cesium (APPF)
  CESIUM_AWS_ACCESS_KEY_ID: $CESIUM_AWS_ACCESS_KEY_ID
  CESIUM_AWS_SECRET_ACCESS_KEY: $CESIUM_AWS_SECRET_ACCESS_KEY

  #jupyterhub
  JHUB_ADMIN_USER: ${JHUB_ADMIN_USER}
  JHUB_CRYPT_KEEPER_KEY1: ${JHUB_CRYPT_KEEPER_KEY1}
  JHUB_SECRET_TOKEN: ${JHUB_SECRET_TOKEN}

  UPPY_COMPANION_SECRET: ${UPPY_COMPANION_SECRET}
  UPPY_PREAUTH_SECRET: ${UPPY_PREAUTH_SECRET}
  COMPANION_GOOGLE_KEY: ${COMPANION_GOOGLE_KEY}
  COMPANION_GOOGLE_SECRET: ${COMPANION_GOOGLE_SECRET}
---
#Init scripts for WebODM, NodeODM
apiVersion: v1
kind: ConfigMap
metadata:
  name: script-configmap
  namespace: default
data:
  node_setup.sh: |
${NODEODM_SETUP_SCRIPT_CONTENT}
  asdc_init.sh: |
${WEBODM_SETUP_SCRIPT_CONTENT}
  db_check.sh: |
${DATABASE_CHECK_SCRIPT_CONTENT}

---
#Init scripts for Jupyterhub
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyter-script-configmap
  namespace: jupyterhub
data:
  jupyterhub_config_custom.py: |
${JUPYTERHUB_CONFIG_SCRIPT_CONTENT}
  asdc-start-notebook.sh: |
${JUPYTERHUB_START_SCRIPT_CONTENT}

---
# Secret for k8s-csi-s3 mounts to object store
#https://github.com/yandex-cloud/k8s-csi-s3
apiVersion: v1
kind: Secret
metadata:
  name: csi-s3-secret
  # Namespace depends on the configuration in the storageclass.yaml
  namespace: kube-system
stringData:
  accessKeyID: $AWS_ACCESS_KEY_ID
  secretAccessKey: $AWS_SECRET_ACCESS_KEY
  # For AWS set it to "https://s3.<region>.amazonaws.com", for example https://s3.eu-central-1.amazonaws.com
  endpoint: $AWS_ENDPOINT
  # For AWS set it to AWS region
  #region: ""

